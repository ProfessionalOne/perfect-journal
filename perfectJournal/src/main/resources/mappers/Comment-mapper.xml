<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pj.journal.model.comment.CommentDao">
	<select id="selectAllCommentnReply" parameterType="int"
		resultType="CommentBean">
		SELECT
		c.comment_id AS commentId,
		u.user_id AS userId,
		p.post_id AS postId,
		c.content,
		u.nickname,
		c.created_at AS createdAt,
		c.updated_at AS updatedAt,
		c.ord,
		c.level,
		c.is_deleted AS isDeleted
		FROM comments c
		JOIN users u ON c.user_id = u.user_id
		JOIN posts p ON c.post_id = p.post_id
		WHERE c.post_id = #{postId}
		ORDER BY
		c.comment_id ASC,
		c.ord ASC,
		c.level ASC
	</select>

	<insert id="insertOneComment" parameterType="commentBean" useGeneratedKeys="true" keyProperty="commentId">
		INSERT INTO Comments (post_id, user_id, content, created_at,
		updated_at)
		VALUES (#{postId}, #{userId}, #{content}, now(), now())
	</insert>
	<insert id="insertOneReply" parameterType="commentBean" useGeneratedKeys="true" keyProperty="commentId">
		INSERT INTO Comments (post_id, user_id, content, created_at,
		updated_at, ord, level)
		VALUES(
		#{postId}
		#{userId},
		#{content},
		NOW(),
		NOW(),
		IFNULL(MAX(ord), 0) + 1,
		1)
<!--근데 이 형태는 락 관리가 안되는형태라 나중에 문제가 생길수도 있어요... 해결 원하시면 따로 수정할게요-->
	</insert>
	<update id="updateOneCommentnReply" parameterType="commentBean">
		UPDATE Comments SET (content=#{content}, updatedAt=now()) WHERE
		post_id=#{post_id} AND comment_id=#{comment_id} AND ord=#{ord} AND
		level=#{level} AND user_id=#{userId})
	</update>
	<update id="deleteOneCommentnReply" parameterType="commentBean">
		UPDATE Comments SET is_deleted='true' WHERE post_id=#{post_id} AND
		comment_id=#{comment_id} AND ord=#{ord} AND level=#{level} AND
		user_id=#{userId})
	</update>

</mapper>